{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.count + sum;\n      }, 0);\n    },\n    plusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n    },\n    minusItem(state, action) {},\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n    clearItems(state) {\n      state.items = [];\n    }\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  clearItems\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","count","push","reduce","sum","price","plusItem","minusItem","removeItem","filter","clearItems","actions","reducer"],"sources":["C:/forGH/react-pizza/src/redux/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n\ttotalPrice: 0,\r\n\titems: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n\tname: 'cart',\r\n\tinitialState,\r\n\treducers: {\r\n\t\taddItem(state, action) {\r\n\t\t\tconst findItem = state.items.find(obj => obj.id === action.payload.id);\r\n\r\n\t\t\tif (findItem) {\r\n\t\t\t\tfindItem.count++;\r\n\t\t\t} else {\r\n\t\t\t\tstate.items.push({\r\n\t\t\t\t\t...action.payload,\r\n\t\t\t\t\tcount: 1,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tstate.totalPrice = state.items.reduce((sum, obj) => {\r\n\t\t\t\treturn obj.price * obj.count + sum;\r\n\t\t\t}, 0);\r\n\t\t},\r\n\t\tplusItem(state, action) {\r\n\t\t\tconst findItem = state.items.find(obj => obj.id === action.payload);\r\n\t\t},\r\n\t\tminusItem(state, action) {},\r\n\t\tremoveItem(state, action) {\r\n\t\t\tstate.items = state.items.filter(obj => obj.id !== action.payload);\r\n\t\t},\r\n\t\tclearItems(state) {\r\n\t\t\tstate.items = [];\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { addItem, removeItem, clearItems } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACpBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AACR,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACTC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAEtE,IAAIH,QAAQ,EAAE;QACbA,QAAQ,CAACK,KAAK,EAAE;MACjB,CAAC,MAAM;QACNP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UAChB,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACR,CAAC,CAAC;MACH;MAEAP,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEN,GAAG,KAAK;QACnD,OAAOA,GAAG,CAACO,KAAK,GAAGP,GAAG,CAACG,KAAK,GAAGG,GAAG;MACnC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC;IACDE,QAAQA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACpE,CAAC;IACDO,SAASA,CAACb,KAAK,EAAEC,MAAM,EAAE,CAAC,CAAC;IAC3Ba,UAAUA,CAACd,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACoB,MAAM,CAACX,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACnE,CAAC;IACDU,UAAUA,CAAChB,KAAK,EAAE;MACjBA,KAAK,CAACL,KAAK,GAAG,EAAE;IACjB;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,OAAO;EAAEe,UAAU;EAAEE;AAAW,CAAC,GAAGpB,SAAS,CAACqB,OAAO;AAEpE,eAAerB,SAAS,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}